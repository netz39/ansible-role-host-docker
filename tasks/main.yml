# SPDX-FileCopyrightText: 2020 Stefan Haun <tux@netz39.de>
# SPDX-License-Identifier: MIT
#
# This file is a mash-up of:
#   https://github.com/geerlingguy/ansible-role-docker/blob/master/tasks/docker-compose.yml
#   https://www.digitalocean.com/community/tutorials/how-to-install-docker-compose-on-debian-9
#   and our own stuff â€¦
---
# tasks file for host-docker
- name: Gather package facts
  ansible.builtin.package_facts:
    manager: "auto"

- name: Exit if docker.io is installed
  ansible.builtin.fail:
    msg: "Please remove docker.io (Debian vanilla docker package) first!"
  when: "'docker.io' in ansible_facts.packages"

- name: Install Docker APT deps
  ansible.builtin.package:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - apt-transport-https
      - ca-certificates
      - gnupg2
      - software-properties-common

# Link: https://docs.docker.com/engine/install/debian/#install-using-the-repository
- name: Prepare apt with key and sources entry
  block:
    - name: Ensure apt keyrings dir is present
      ansible.builtin.file:
        path: "{{ docker_apt_keyrings_dir }}"
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Put docker apt release key in place
      ansible.builtin.get_url:
        url: "{{ docker_apt_key_url }}"
        dest: "{{ docker_apt_keyrings_dir }}/docker.asc"
        mode: '0644'
        backup: true
        force: true
      register: apt_repo

    - name: Add Docker's APT repository
      ansible.builtin.template:
        src: templates/docker.list.j2
        dest: /etc/apt/sources.list.d/docker.list
        owner: root
        group: root
        mode: '0644'
      register: apt_repo

    # that key was created in 2017 and was still in use in 2024,
    # we most probably need to remove this one key only
    - name: Remove key from deprecated apt-key storage
      ansible.builtin.apt_key:
        id: 0x9DC858229FC7DD38854AE2D88D81803C0EBFCD88
        state: absent

- name: Optionally get and check GPG fingerprint of apt key file
  when: docker_apt_key_fpr is defined   # no need to get the fpr if user does not want to check it anyways
  block:
    - name: Get GPG fingerprint of downloaded key file
      ansible.builtin.shell:
        cmd: "gpg --with-colons --show-keys '{{ docker_apt_keyrings_dir }}/docker.asc' | grep -A1 '^pub:' | grep '^fpr:' | cut -d: -f10"
      changed_when: false
      register: gpg_fpr

    - name: Assert GPG fingerprint of apt key file is the one provided by the user
      ansible.builtin.assert:
        that:
          - not gpg_fpr.failed
          - gpg_fpr.rc == 0
          - gpg_fpr.stdout == docker_apt_key_fpr
        fail_msg: "Docker APT key fingerprint does not match!"
      when: (gpg_fpr.skipped is not defined) or not gpg_fpr.skipped

- name: Update package cache  # noqa: no-handler
  ansible.builtin.apt:
    update_cache: true
  when: apt_repo.changed

- name: Install Docker
  ansible.builtin.package:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - docker-ce
      - docker-compose-plugin
      - python3-docker

- name: Set docker configuration
  ansible.builtin.template:
    src: templates/daemon.json.j2
    dest: /etc/docker/daemon.json
    mode: "0644"
  notify: Restart docker

- name: Place admin users in docker group
  ansible.builtin.user:
    name: "{{ item.logname }}"
    groups: [docker]
    append: yes
  when: (item.docker is defined) and item.docker
  with_items: "{{ users }}"
